Search.setIndex({"alltitles": {"A built-in dataloader for the pytorch-lightning framework": [[9, "a-built-in-dataloader-for-the-pytorch-lightning-framework"]], "A single cell dataloader": [[10, "a-single-cell-dataloader"]], "Build a CellArrDataset": [[9, "build-a-cellarrdataset"]], "Build the CellArrDataset": [[10, "build-the-cellarrdataset"]], "Building on HPC environments with slurm": [[9, "building-on-hpc-environments-with-slurm"]], "Cell Arrays": [[9, null], [10, null]], "Cell Metadata": [[8, "cell-metadata"]], "Changelog": [[4, null]], "Clone the repository": [[5, "clone-the-repository"]], "Code Contributions": [[5, "code-contributions"]], "Contents": [[6, "contents"]], "Contributing": [[5, "contributing"]], "Contributors": [[3, null]], "Create an environment": [[5, "create-an-environment"]], "Documentation Improvements": [[5, "documentation-improvements"]], "Experimental Data Consistency": [[8, "experimental-data-consistency"]], "Handling Metadata Columns with None/NaN Values": [[8, "handling-metadata-columns-with-none-nan-values"]], "Implement your changes": [[5, "implement-your-changes"]], "Indices and tables": [[6, "indices-and-tables"]], "Install": [[6, "install"], [9, "install"]], "Install the package": [[10, "install-the-package"]], "Issue Reports": [[5, "issue-reports"]], "License": [[7, null]], "Maintainer tasks": [[5, "maintainer-tasks"]], "Metadata contains unicode characters?": [[8, "metadata-contains-unicode-characters"]], "Module contents": [[0, "module-cellarr"], [1, "module-cellarr.slurm"]], "Note": [[9, "note"]], "Optionally provide cell metadata columns": [[9, "optionally-provide-cell-metadata-columns"], [10, "optionally-provide-cell-metadata-columns"]], "Query a CellArrDataset": [[9, "query-a-cellarrdataset"], [10, "query-a-cellarrdataset"]], "Releases": [[5, "releases"]], "Sample Information": [[8, "sample-information"]], "Submit an issue": [[5, "submit-an-issue"]], "Submit your contribution": [[5, "submit-your-contribution"]], "Submodules": [[0, "submodules"], [1, "submodules"]], "Subpackages": [[0, "subpackages"]], "Todo": [[5, null], [5, "id2"], [5, "id3"], [5, "id5"], [5, "id6"], [5, "id7"], [5, "id8"], [5, "id9"], [5, "id10"], [5, "id11"], [5, "id12"]], "Troubleshooting": [[5, "troubleshooting"]], "Usage": [[9, "usage"]], "Usage Notes": [[8, null]], "Version 0.1.0 - 0.1.3": [[4, "version-0-1-0-0-1-3"]], "Version 0.2.0": [[4, "version-0-2-0"]], "Version 0.2.1 - 0.2.3": [[4, "version-0-2-1-0-2-3"]], "Version 0.2.4 - 0.2.5": [[4, "version-0-2-4-0-2-5"]], "Version 0.3.0 - 0.3.1": [[4, "version-0-3-0-0-3-1"]], "Version 0.3.2": [[4, "version-0-3-2"]], "Version 0.4.0": [[4, "version-0-4-0"]], "Version 0.5.0": [[4, "version-0-5-0"]], "Version 0.5.1 - 0.5.2": [[4, "version-0-5-1-0-5-2"]], "cellarr": [[2, null], [6, null]], "cellarr package": [[0, null]], "cellarr.CellArrDataset module": [[0, "module-cellarr.CellArrDataset"]], "cellarr.CellArrDatasetSlice module": [[0, "module-cellarr.CellArrDatasetSlice"]], "cellarr.autoencoder module": [[0, "module-cellarr.autoencoder"]], "cellarr.build_cellarrdataset module": [[0, "module-cellarr.build_cellarrdataset"]], "cellarr.build_options module": [[0, "module-cellarr.build_options"]], "cellarr.buildutils_tiledb_array module": [[0, "module-cellarr.buildutils_tiledb_array"]], "cellarr.buildutils_tiledb_frame module": [[0, "module-cellarr.buildutils_tiledb_frame"]], "cellarr.dataloader module": [[0, "module-cellarr.dataloader"]], "cellarr.queryutils_tiledb_frame module": [[0, "module-cellarr.queryutils_tiledb_frame"]], "cellarr.slurm package": [[1, null]], "cellarr.slurm.build_cellarr_steps module": [[1, "module-cellarr.slurm.build_cellarr_steps"]], "cellarr.slurm.final_assembly module": [[1, "module-cellarr.slurm.final_assembly"]], "cellarr.slurm.finalize_matrix module": [[1, "module-cellarr.slurm.finalize_matrix"]], "cellarr.slurm.process_cell_metadata module": [[1, "module-cellarr.slurm.process_cell_metadata"]], "cellarr.slurm.process_gene_annotation module": [[1, "module-cellarr.slurm.process_gene_annotation"]], "cellarr.slurm.process_matrix module": [[1, "module-cellarr.slurm.process_matrix"]], "cellarr.slurm.process_matrix_all module": [[1, "module-cellarr.slurm.process_matrix_all"]], "cellarr.slurm.process_sample_metadata module": [[1, "module-cellarr.slurm.process_sample_metadata"]], "cellarr.utils_anndata module": [[0, "module-cellarr.utils_anndata"]]}, "docnames": ["api/cellarr", "api/cellarr.slurm", "api/modules", "authors", "changelog", "contributing", "index", "license", "notes", "readme", "tutorial"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api/cellarr.rst", "api/cellarr.slurm.rst", "api/modules.rst", "authors.md", "changelog.md", "contributing.md", "index.md", "license.md", "notes.md", "readme.md", "tutorial.md"], "indexentries": {"__annotations__ (cellarr.autoencoder.autoencoder attribute)": [[0, "cellarr.autoencoder.AutoEncoder.__annotations__", false]], "__annotations__ (cellarr.autoencoder.decoder attribute)": [[0, "cellarr.autoencoder.Decoder.__annotations__", false]], "__annotations__ (cellarr.autoencoder.encoder attribute)": [[0, "cellarr.autoencoder.Encoder.__annotations__", false]], "__annotations__ (cellarr.build_options.cellmetadataoptions attribute)": [[0, "cellarr.build_options.CellMetadataOptions.__annotations__", false]], "__annotations__ (cellarr.build_options.geneannotationoptions attribute)": [[0, "cellarr.build_options.GeneAnnotationOptions.__annotations__", false]], "__annotations__ (cellarr.build_options.matrixoptions attribute)": [[0, "cellarr.build_options.MatrixOptions.__annotations__", false]], "__annotations__ (cellarr.build_options.samplemetadataoptions attribute)": [[0, "cellarr.build_options.SampleMetadataOptions.__annotations__", false]], "__annotations__ (cellarr.cellarrdatasetslice.cellarrdatasetslice attribute)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.__annotations__", false]], "__annotations__ (cellarr.dataloader.datamodule attribute)": [[0, "cellarr.dataloader.DataModule.__annotations__", false]], "__annotations__ (cellarr.dataloader.scdataset attribute)": [[0, "cellarr.dataloader.scDataset.__annotations__", false]], "__dataclass_fields__ (cellarr.build_options.cellmetadataoptions attribute)": [[0, "cellarr.build_options.CellMetadataOptions.__dataclass_fields__", false]], "__dataclass_fields__ (cellarr.build_options.geneannotationoptions attribute)": [[0, "cellarr.build_options.GeneAnnotationOptions.__dataclass_fields__", false]], "__dataclass_fields__ (cellarr.build_options.matrixoptions attribute)": [[0, "cellarr.build_options.MatrixOptions.__dataclass_fields__", false]], "__dataclass_fields__ (cellarr.build_options.samplemetadataoptions attribute)": [[0, "cellarr.build_options.SampleMetadataOptions.__dataclass_fields__", false]], "__dataclass_fields__ (cellarr.cellarrdatasetslice.cellarrdatasetslice attribute)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.__dataclass_fields__", false]], "__dataclass_params__ (cellarr.build_options.cellmetadataoptions attribute)": [[0, "cellarr.build_options.CellMetadataOptions.__dataclass_params__", false]], "__dataclass_params__ (cellarr.build_options.geneannotationoptions attribute)": [[0, "cellarr.build_options.GeneAnnotationOptions.__dataclass_params__", false]], "__dataclass_params__ (cellarr.build_options.matrixoptions attribute)": [[0, "cellarr.build_options.MatrixOptions.__dataclass_params__", false]], "__dataclass_params__ (cellarr.build_options.samplemetadataoptions attribute)": [[0, "cellarr.build_options.SampleMetadataOptions.__dataclass_params__", false]], "__dataclass_params__ (cellarr.cellarrdatasetslice.cellarrdatasetslice attribute)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.__dataclass_params__", false]], "__del__() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.__del__", false]], "__del__() (cellarr.dataloader.datamodule method)": [[0, "cellarr.dataloader.DataModule.__del__", false]], "__enter__() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.__enter__", false]], "__eq__() (cellarr.build_options.cellmetadataoptions method)": [[0, "cellarr.build_options.CellMetadataOptions.__eq__", false]], "__eq__() (cellarr.build_options.geneannotationoptions method)": [[0, "cellarr.build_options.GeneAnnotationOptions.__eq__", false]], "__eq__() (cellarr.build_options.matrixoptions method)": [[0, "cellarr.build_options.MatrixOptions.__eq__", false]], "__eq__() (cellarr.build_options.samplemetadataoptions method)": [[0, "cellarr.build_options.SampleMetadataOptions.__eq__", false]], "__eq__() (cellarr.cellarrdatasetslice.cellarrdatasetslice method)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.__eq__", false]], "__exit__() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.__exit__", false]], "__getitem__() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.__getitem__", false]], "__getitem__() (cellarr.dataloader.scdataset method)": [[0, "cellarr.dataloader.scDataset.__getitem__", false]], "__hash__ (cellarr.build_options.cellmetadataoptions attribute)": [[0, "cellarr.build_options.CellMetadataOptions.__hash__", false]], "__hash__ (cellarr.build_options.geneannotationoptions attribute)": [[0, "cellarr.build_options.GeneAnnotationOptions.__hash__", false]], "__hash__ (cellarr.build_options.matrixoptions attribute)": [[0, "cellarr.build_options.MatrixOptions.__hash__", false]], "__hash__ (cellarr.build_options.samplemetadataoptions attribute)": [[0, "cellarr.build_options.SampleMetadataOptions.__hash__", false]], "__hash__ (cellarr.cellarrdatasetslice.cellarrdatasetslice attribute)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.__hash__", false]], "__init__() (cellarr.autoencoder.autoencoder method)": [[0, "cellarr.autoencoder.AutoEncoder.__init__", false]], "__init__() (cellarr.autoencoder.decoder method)": [[0, "cellarr.autoencoder.Decoder.__init__", false]], "__init__() (cellarr.autoencoder.encoder method)": [[0, "cellarr.autoencoder.Encoder.__init__", false]], "__init__() (cellarr.build_options.cellmetadataoptions method)": [[0, "cellarr.build_options.CellMetadataOptions.__init__", false]], "__init__() (cellarr.build_options.geneannotationoptions method)": [[0, "cellarr.build_options.GeneAnnotationOptions.__init__", false]], "__init__() (cellarr.build_options.matrixoptions method)": [[0, "cellarr.build_options.MatrixOptions.__init__", false]], "__init__() (cellarr.build_options.samplemetadataoptions method)": [[0, "cellarr.build_options.SampleMetadataOptions.__init__", false]], "__init__() (cellarr.cellarrdataset.cellarrcelliterator method)": [[0, "cellarr.CellArrDataset.CellArrCellIterator.__init__", false]], "__init__() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.__init__", false]], "__init__() (cellarr.cellarrdataset.cellarrsampleiterator method)": [[0, "cellarr.CellArrDataset.CellArrSampleIterator.__init__", false]], "__init__() (cellarr.cellarrdatasetslice.cellarrdatasetslice method)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.__init__", false]], "__init__() (cellarr.dataloader.basebatchsampler method)": [[0, "cellarr.dataloader.BaseBatchSampler.__init__", false]], "__init__() (cellarr.dataloader.datamodule method)": [[0, "cellarr.dataloader.DataModule.__init__", false]], "__init__() (cellarr.dataloader.scdataset method)": [[0, "cellarr.dataloader.scDataset.__init__", false]], "__init__() (cellarr.slurm.build_cellarr_steps.slurmbuilder method)": [[1, "cellarr.slurm.build_cellarr_steps.SlurmBuilder.__init__", false]], "__iter__() (cellarr.cellarrdataset.cellarrcelliterator method)": [[0, "cellarr.CellArrDataset.CellArrCellIterator.__iter__", false]], "__iter__() (cellarr.cellarrdataset.cellarrsampleiterator method)": [[0, "cellarr.CellArrDataset.CellArrSampleIterator.__iter__", false]], "__iter__() (cellarr.dataloader.basebatchsampler method)": [[0, "cellarr.dataloader.BaseBatchSampler.__iter__", false]], "__len__() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.__len__", false]], "__len__() (cellarr.cellarrdatasetslice.cellarrdatasetslice method)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.__len__", false]], "__len__() (cellarr.dataloader.basebatchsampler method)": [[0, "cellarr.dataloader.BaseBatchSampler.__len__", false]], "__len__() (cellarr.dataloader.scdataset method)": [[0, "cellarr.dataloader.scDataset.__len__", false]], "__match_args__ (cellarr.build_options.cellmetadataoptions attribute)": [[0, "cellarr.build_options.CellMetadataOptions.__match_args__", false]], "__match_args__ (cellarr.build_options.geneannotationoptions attribute)": [[0, "cellarr.build_options.GeneAnnotationOptions.__match_args__", false]], "__match_args__ (cellarr.build_options.matrixoptions attribute)": [[0, "cellarr.build_options.MatrixOptions.__match_args__", false]], "__match_args__ (cellarr.build_options.samplemetadataoptions attribute)": [[0, "cellarr.build_options.SampleMetadataOptions.__match_args__", false]], "__match_args__ (cellarr.cellarrdatasetslice.cellarrdatasetslice attribute)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.__match_args__", false]], "__next__() (cellarr.cellarrdataset.cellarrcelliterator method)": [[0, "cellarr.CellArrDataset.CellArrCellIterator.__next__", false]], "__next__() (cellarr.cellarrdataset.cellarrsampleiterator method)": [[0, "cellarr.CellArrDataset.CellArrSampleIterator.__next__", false]], "__orig_bases__ (cellarr.dataloader.basebatchsampler attribute)": [[0, "cellarr.dataloader.BaseBatchSampler.__orig_bases__", false]], "__parameters__ (cellarr.dataloader.basebatchsampler attribute)": [[0, "cellarr.dataloader.BaseBatchSampler.__parameters__", false]], "__parameters__ (cellarr.dataloader.scdataset attribute)": [[0, "cellarr.dataloader.scDataset.__parameters__", false]], "__repr__() (cellarr.build_options.cellmetadataoptions method)": [[0, "cellarr.build_options.CellMetadataOptions.__repr__", false]], "__repr__() (cellarr.build_options.geneannotationoptions method)": [[0, "cellarr.build_options.GeneAnnotationOptions.__repr__", false]], "__repr__() (cellarr.build_options.matrixoptions method)": [[0, "cellarr.build_options.MatrixOptions.__repr__", false]], "__repr__() (cellarr.build_options.samplemetadataoptions method)": [[0, "cellarr.build_options.SampleMetadataOptions.__repr__", false]], "__repr__() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.__repr__", false]], "__repr__() (cellarr.cellarrdatasetslice.cellarrdatasetslice method)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.__repr__", false]], "__repr__() (cellarr.dataloader.datamodule method)": [[0, "cellarr.dataloader.DataModule.__repr__", false]], "__repr__() (cellarr.dataloader.scdataset method)": [[0, "cellarr.dataloader.scDataset.__repr__", false]], "append_to_tiledb_frame() (in module cellarr.buildutils_tiledb_frame)": [[0, "cellarr.buildutils_tiledb_frame.append_to_tiledb_frame", false]], "autoencoder (class in cellarr.autoencoder)": [[0, "cellarr.autoencoder.AutoEncoder", false]], "basebatchsampler (class in cellarr.dataloader)": [[0, "cellarr.dataloader.BaseBatchSampler", false]], "build_cellarrdataset() (in module cellarr.build_cellarrdataset)": [[0, "cellarr.build_cellarrdataset.build_cellarrdataset", false]], "cell_metadata (cellarr.cellarrdatasetslice.cellarrdatasetslice attribute)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.cell_metadata", false]], "cellarr": [[0, "module-cellarr", false]], "cellarr.autoencoder": [[0, "module-cellarr.autoencoder", false]], "cellarr.build_cellarrdataset": [[0, "module-cellarr.build_cellarrdataset", false]], "cellarr.build_options": [[0, "module-cellarr.build_options", false]], "cellarr.buildutils_tiledb_array": [[0, "module-cellarr.buildutils_tiledb_array", false]], "cellarr.buildutils_tiledb_frame": [[0, "module-cellarr.buildutils_tiledb_frame", false]], "cellarr.cellarrdataset": [[0, "module-cellarr.CellArrDataset", false]], "cellarr.cellarrdatasetslice": [[0, "module-cellarr.CellArrDatasetSlice", false]], "cellarr.dataloader": [[0, "module-cellarr.dataloader", false]], "cellarr.queryutils_tiledb_frame": [[0, "module-cellarr.queryutils_tiledb_frame", false]], "cellarr.slurm": [[1, "module-cellarr.slurm", false]], "cellarr.slurm.build_cellarr_steps": [[1, "module-cellarr.slurm.build_cellarr_steps", false]], "cellarr.slurm.final_assembly": [[1, "module-cellarr.slurm.final_assembly", false]], "cellarr.slurm.finalize_matrix": [[1, "module-cellarr.slurm.finalize_matrix", false]], "cellarr.slurm.process_cell_metadata": [[1, "module-cellarr.slurm.process_cell_metadata", false]], "cellarr.slurm.process_gene_annotation": [[1, "module-cellarr.slurm.process_gene_annotation", false]], "cellarr.slurm.process_matrix": [[1, "module-cellarr.slurm.process_matrix", false]], "cellarr.slurm.process_matrix_all": [[1, "module-cellarr.slurm.process_matrix_all", false]], "cellarr.slurm.process_sample_metadata": [[1, "module-cellarr.slurm.process_sample_metadata", false]], "cellarr.utils_anndata": [[0, "module-cellarr.utils_anndata", false]], "cellarrcelliterator (class in cellarr.cellarrdataset)": [[0, "cellarr.CellArrDataset.CellArrCellIterator", false]], "cellarrdataset (class in cellarr.cellarrdataset)": [[0, "cellarr.CellArrDataset.CellArrDataset", false]], "cellarrdatasetslice (class in cellarr.cellarrdatasetslice)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice", false]], "cellarrsampleiterator (class in cellarr.cellarrdataset)": [[0, "cellarr.CellArrDataset.CellArrSampleIterator", false]], "cellmetadataoptions (class in cellarr.build_options)": [[0, "cellarr.build_options.CellMetadataOptions", false]], "collate() (cellarr.dataloader.datamodule method)": [[0, "cellarr.dataloader.DataModule.collate", false]], "column_names (cellarr.build_options.cellmetadataoptions attribute)": [[0, "cellarr.build_options.CellMetadataOptions.column_names", false]], "column_types (cellarr.build_options.cellmetadataoptions attribute)": [[0, "cellarr.build_options.CellMetadataOptions.column_types", false], [0, "id0", false]], "column_types (cellarr.build_options.geneannotationoptions attribute)": [[0, "cellarr.build_options.GeneAnnotationOptions.column_types", false], [0, "id4", false]], "column_types (cellarr.build_options.samplemetadataoptions attribute)": [[0, "cellarr.build_options.SampleMetadataOptions.column_types", false], [0, "id15", false]], "configure_optimizers() (cellarr.autoencoder.autoencoder method)": [[0, "cellarr.autoencoder.AutoEncoder.configure_optimizers", false]], "consolidate_duplicate_gene_func (cellarr.build_options.matrixoptions attribute)": [[0, "cellarr.build_options.MatrixOptions.consolidate_duplicate_gene_func", false]], "consolidate_duplicate_gene_func() (cellarr.build_options.matrixoptions method)": [[0, "id9", false]], "consolidate_duplicate_symbols() (in module cellarr.utils_anndata)": [[0, "cellarr.utils_anndata.consolidate_duplicate_symbols", false]], "create_array_script() (cellarr.slurm.build_cellarr_steps.slurmbuilder method)": [[1, "cellarr.slurm.build_cellarr_steps.SlurmBuilder.create_array_script", false]], "create_group() (in module cellarr.buildutils_tiledb_array)": [[0, "cellarr.buildutils_tiledb_array.create_group", false]], "create_slurm_script() (cellarr.slurm.build_cellarr_steps.slurmbuilder method)": [[1, "cellarr.slurm.build_cellarr_steps.SlurmBuilder.create_slurm_script", false]], "create_tiledb_array() (in module cellarr.buildutils_tiledb_array)": [[0, "cellarr.buildutils_tiledb_array.create_tiledb_array", false]], "create_tiledb_frame_from_chunk() (in module cellarr.buildutils_tiledb_frame)": [[0, "cellarr.buildutils_tiledb_frame.create_tiledb_frame_from_chunk", false]], "create_tiledb_frame_from_column_names() (in module cellarr.buildutils_tiledb_frame)": [[0, "cellarr.buildutils_tiledb_frame.create_tiledb_frame_from_column_names", false]], "create_tiledb_frame_from_dataframe() (in module cellarr.buildutils_tiledb_frame)": [[0, "cellarr.buildutils_tiledb_frame.create_tiledb_frame_from_dataframe", false]], "datamodule (class in cellarr.dataloader)": [[0, "cellarr.dataloader.DataModule", false]], "decoder (class in cellarr.autoencoder)": [[0, "cellarr.autoencoder.Decoder", false]], "dtype (cellarr.build_options.cellmetadataoptions attribute)": [[0, "cellarr.build_options.CellMetadataOptions.dtype", false], [0, "id1", false]], "dtype (cellarr.build_options.geneannotationoptions attribute)": [[0, "cellarr.build_options.GeneAnnotationOptions.dtype", false], [0, "id5", false]], "dtype (cellarr.build_options.matrixoptions attribute)": [[0, "cellarr.build_options.MatrixOptions.dtype", false], [0, "id10", false]], "dtype (cellarr.build_options.samplemetadataoptions attribute)": [[0, "cellarr.build_options.SampleMetadataOptions.dtype", false], [0, "id16", false]], "encoder (class in cellarr.autoencoder)": [[0, "cellarr.autoencoder.Encoder", false]], "extract_anndata_info() (in module cellarr.utils_anndata)": [[0, "cellarr.utils_anndata.extract_anndata_info", false]], "feature_column (cellarr.build_options.geneannotationoptions attribute)": [[0, "cellarr.build_options.GeneAnnotationOptions.feature_column", false], [0, "id6", false]], "filter_db() (cellarr.dataloader.datamodule method)": [[0, "cellarr.dataloader.DataModule.filter_db", false]], "final_assembly() (in module cellarr.slurm.final_assembly)": [[1, "cellarr.slurm.final_assembly.final_assembly", false]], "finalize_matrix() (in module cellarr.slurm.finalize_matrix)": [[1, "cellarr.slurm.finalize_matrix.finalize_matrix", false]], "forward() (cellarr.autoencoder.autoencoder method)": [[0, "cellarr.autoencoder.AutoEncoder.forward", false]], "forward() (cellarr.autoencoder.decoder method)": [[0, "cellarr.autoencoder.Decoder.forward", false]], "forward() (cellarr.autoencoder.encoder method)": [[0, "cellarr.autoencoder.Encoder.forward", false]], "gene_annotation (cellarr.cellarrdatasetslice.cellarrdatasetslice attribute)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.gene_annotation", false]], "geneannotationoptions (class in cellarr.build_options)": [[0, "cellarr.build_options.GeneAnnotationOptions", false]], "generate_metadata_tiledb_csv() (in module cellarr.build_cellarrdataset)": [[0, "cellarr.build_cellarrdataset.generate_metadata_tiledb_csv", false]], "generate_metadata_tiledb_frame() (in module cellarr.build_cellarrdataset)": [[0, "cellarr.build_cellarrdataset.generate_metadata_tiledb_frame", false]], "get_a_column() (in module cellarr.queryutils_tiledb_frame)": [[0, "cellarr.queryutils_tiledb_frame.get_a_column", false]], "get_assays() (cellarr.cellarrdatasetslice.cellarrdatasetslice method)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.get_assays", false]], "get_cell_metadata_column() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_cell_metadata_column", false]], "get_cell_metadata_columns() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_cell_metadata_columns", false]], "get_cell_subset() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_cell_subset", false]], "get_cells_for_sample() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_cells_for_sample", false]], "get_gene_annotation_column() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_gene_annotation_column", false]], "get_gene_annotation_columns() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_gene_annotation_columns", false]], "get_gene_annotation_index() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_gene_annotation_index", false]], "get_gene_subset() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_gene_subset", false]], "get_index() (in module cellarr.queryutils_tiledb_frame)": [[0, "cellarr.queryutils_tiledb_frame.get_index", false]], "get_loss() (cellarr.autoencoder.autoencoder method)": [[0, "cellarr.autoencoder.AutoEncoder.get_loss", false]], "get_matrix_subset() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_matrix_subset", false]], "get_number_of_cells() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_number_of_cells", false]], "get_number_of_features() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_number_of_features", false]], "get_number_of_samples() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_number_of_samples", false]], "get_sample_metadata_column() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_sample_metadata_column", false]], "get_sample_metadata_columns() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_sample_metadata_columns", false]], "get_sample_metadata_index() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_sample_metadata_index", false]], "get_sample_subset() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_sample_subset", false]], "get_schema_names_frame() (in module cellarr.queryutils_tiledb_frame)": [[0, "cellarr.queryutils_tiledb_frame.get_schema_names_frame", false]], "get_slice() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.get_slice", false]], "infer_column_types() (in module cellarr.buildutils_tiledb_frame)": [[0, "cellarr.buildutils_tiledb_frame.infer_column_types", false]], "itercells() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.itercells", false]], "itersamples() (cellarr.cellarrdataset.cellarrdataset method)": [[0, "cellarr.CellArrDataset.CellArrDataset.itersamples", false]], "load_state() (cellarr.autoencoder.autoencoder method)": [[0, "cellarr.autoencoder.AutoEncoder.load_state", false]], "load_state() (cellarr.autoencoder.decoder method)": [[0, "cellarr.autoencoder.Decoder.load_state", false]], "load_state() (cellarr.autoencoder.encoder method)": [[0, "cellarr.autoencoder.Encoder.load_state", false]], "main() (in module cellarr.slurm.build_cellarr_steps)": [[1, "cellarr.slurm.build_cellarr_steps.main", false]], "matrix (cellarr.cellarrdatasetslice.cellarrdatasetslice attribute)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.matrix", false]], "matrix_attr_name (cellarr.build_options.matrixoptions attribute)": [[0, "cellarr.build_options.MatrixOptions.matrix_attr_name", false], [0, "id11", false]], "matrix_name (cellarr.build_options.matrixoptions attribute)": [[0, "cellarr.build_options.MatrixOptions.matrix_name", false], [0, "id12", false]], "matrixoptions (class in cellarr.build_options)": [[0, "cellarr.build_options.MatrixOptions", false]], "module": [[0, "module-cellarr", false], [0, "module-cellarr.CellArrDataset", false], [0, "module-cellarr.CellArrDatasetSlice", false], [0, "module-cellarr.autoencoder", false], [0, "module-cellarr.build_cellarrdataset", false], [0, "module-cellarr.build_options", false], [0, "module-cellarr.buildutils_tiledb_array", false], [0, "module-cellarr.buildutils_tiledb_frame", false], [0, "module-cellarr.dataloader", false], [0, "module-cellarr.queryutils_tiledb_frame", false], [0, "module-cellarr.utils_anndata", false], [1, "module-cellarr.slurm", false], [1, "module-cellarr.slurm.build_cellarr_steps", false], [1, "module-cellarr.slurm.final_assembly", false], [1, "module-cellarr.slurm.finalize_matrix", false], [1, "module-cellarr.slurm.process_cell_metadata", false], [1, "module-cellarr.slurm.process_gene_annotation", false], [1, "module-cellarr.slurm.process_matrix", false], [1, "module-cellarr.slurm.process_matrix_all", false], [1, "module-cellarr.slurm.process_sample_metadata", false]], "on_validation_epoch_end() (cellarr.autoencoder.autoencoder method)": [[0, "cellarr.autoencoder.AutoEncoder.on_validation_epoch_end", false]], "on_validation_epoch_start() (cellarr.autoencoder.autoencoder method)": [[0, "cellarr.autoencoder.AutoEncoder.on_validation_epoch_start", false]], "optimize_tiledb_array() (in module cellarr.buildutils_tiledb_array)": [[0, "cellarr.buildutils_tiledb_array.optimize_tiledb_array", false]], "process_cell_metadata() (in module cellarr.slurm.process_cell_metadata)": [[1, "cellarr.slurm.process_cell_metadata.process_cell_metadata", false]], "process_gene_annotation() (in module cellarr.slurm.process_gene_annotation)": [[1, "cellarr.slurm.process_gene_annotation.process_gene_annotation", false]], "process_matrix() (in module cellarr.slurm.process_matrix_all)": [[1, "cellarr.slurm.process_matrix_all.process_matrix", false]], "process_matrix_file() (in module cellarr.slurm.process_matrix)": [[1, "cellarr.slurm.process_matrix.process_matrix_file", false]], "process_sample_metadata() (in module cellarr.slurm.process_sample_metadata)": [[1, "cellarr.slurm.process_sample_metadata.process_sample_metadata", false]], "remap_anndata() (in module cellarr.utils_anndata)": [[0, "cellarr.utils_anndata.remap_anndata", false]], "samplemetadataoptions (class in cellarr.build_options)": [[0, "cellarr.build_options.SampleMetadataOptions", false]], "save_all() (cellarr.autoencoder.autoencoder method)": [[0, "cellarr.autoencoder.AutoEncoder.save_all", false]], "save_state() (cellarr.autoencoder.decoder method)": [[0, "cellarr.autoencoder.Decoder.save_state", false]], "save_state() (cellarr.autoencoder.encoder method)": [[0, "cellarr.autoencoder.Encoder.save_state", false]], "scan_for_cellcounts() (in module cellarr.utils_anndata)": [[0, "cellarr.utils_anndata.scan_for_cellcounts", false]], "scan_for_cellmetadata() (in module cellarr.utils_anndata)": [[0, "cellarr.utils_anndata.scan_for_cellmetadata", false]], "scan_for_features() (in module cellarr.utils_anndata)": [[0, "cellarr.utils_anndata.scan_for_features", false]], "scan_for_features_annotations() (in module cellarr.utils_anndata)": [[0, "cellarr.utils_anndata.scan_for_features_annotations", false]], "scdataset (class in cellarr.dataloader)": [[0, "cellarr.dataloader.scDataset", false]], "shape (cellarr.cellarrdataset.cellarrdataset property)": [[0, "cellarr.CellArrDataset.CellArrDataset.shape", false]], "shape (cellarr.cellarrdatasetslice.cellarrdatasetslice property)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.shape", false]], "skip (cellarr.build_options.cellmetadataoptions attribute)": [[0, "cellarr.build_options.CellMetadataOptions.skip", false], [0, "id2", false]], "skip (cellarr.build_options.geneannotationoptions attribute)": [[0, "cellarr.build_options.GeneAnnotationOptions.skip", false], [0, "id7", false]], "skip (cellarr.build_options.matrixoptions attribute)": [[0, "cellarr.build_options.MatrixOptions.skip", false], [0, "id13", false]], "skip (cellarr.build_options.samplemetadataoptions attribute)": [[0, "cellarr.build_options.SampleMetadataOptions.skip", false], [0, "id17", false]], "slurmbuilder (class in cellarr.slurm.build_cellarr_steps)": [[1, "cellarr.slurm.build_cellarr_steps.SlurmBuilder", false]], "submit_cell_metadata_job() (cellarr.slurm.build_cellarr_steps.slurmbuilder method)": [[1, "cellarr.slurm.build_cellarr_steps.SlurmBuilder.submit_cell_metadata_job", false]], "submit_final_assembly() (cellarr.slurm.build_cellarr_steps.slurmbuilder method)": [[1, "cellarr.slurm.build_cellarr_steps.SlurmBuilder.submit_final_assembly", false]], "submit_gene_annotation_job() (cellarr.slurm.build_cellarr_steps.slurmbuilder method)": [[1, "cellarr.slurm.build_cellarr_steps.SlurmBuilder.submit_gene_annotation_job", false]], "submit_job() (cellarr.slurm.build_cellarr_steps.slurmbuilder method)": [[1, "cellarr.slurm.build_cellarr_steps.SlurmBuilder.submit_job", false]], "submit_matrix_processing() (cellarr.slurm.build_cellarr_steps.slurmbuilder method)": [[1, "cellarr.slurm.build_cellarr_steps.SlurmBuilder.submit_matrix_processing", false]], "submit_sample_metadata_job() (cellarr.slurm.build_cellarr_steps.slurmbuilder method)": [[1, "cellarr.slurm.build_cellarr_steps.SlurmBuilder.submit_sample_metadata_job", false]], "subset_array() (in module cellarr.queryutils_tiledb_frame)": [[0, "cellarr.queryutils_tiledb_frame.subset_array", false]], "subset_frame() (in module cellarr.queryutils_tiledb_frame)": [[0, "cellarr.queryutils_tiledb_frame.subset_frame", false]], "tiledb_store_name (cellarr.build_options.cellmetadataoptions attribute)": [[0, "cellarr.build_options.CellMetadataOptions.tiledb_store_name", false], [0, "id3", false]], "tiledb_store_name (cellarr.build_options.geneannotationoptions attribute)": [[0, "cellarr.build_options.GeneAnnotationOptions.tiledb_store_name", false], [0, "id8", false]], "tiledb_store_name (cellarr.build_options.matrixoptions attribute)": [[0, "cellarr.build_options.MatrixOptions.tiledb_store_name", false], [0, "id14", false]], "tiledb_store_name (cellarr.build_options.samplemetadataoptions attribute)": [[0, "cellarr.build_options.SampleMetadataOptions.tiledb_store_name", false], [0, "id18", false]], "to_anndata() (cellarr.cellarrdatasetslice.cellarrdatasetslice method)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.to_anndata", false]], "to_summarizedexperiment() (cellarr.cellarrdatasetslice.cellarrdatasetslice method)": [[0, "cellarr.CellArrDatasetSlice.CellArrDatasetSlice.to_summarizedexperiment", false]], "train_dataloader() (cellarr.dataloader.datamodule method)": [[0, "cellarr.dataloader.DataModule.train_dataloader", false]], "training_step() (cellarr.autoencoder.autoencoder method)": [[0, "cellarr.autoencoder.AutoEncoder.training_step", false]], "val_dataloader() (cellarr.dataloader.datamodule method)": [[0, "cellarr.dataloader.DataModule.val_dataloader", false]], "validation_step() (cellarr.autoencoder.autoencoder method)": [[0, "cellarr.autoencoder.AutoEncoder.validation_step", false]], "write_csr_matrix_to_tiledb() (in module cellarr.buildutils_tiledb_array)": [[0, "cellarr.buildutils_tiledb_array.write_csr_matrix_to_tiledb", false]]}, "objects": {"": [[0, 0, 0, "-", "cellarr"]], "cellarr": [[0, 0, 0, "-", "CellArrDataset"], [0, 0, 0, "-", "CellArrDatasetSlice"], [0, 0, 0, "-", "autoencoder"], [0, 0, 0, "-", "build_cellarrdataset"], [0, 0, 0, "-", "build_options"], [0, 0, 0, "-", "buildutils_tiledb_array"], [0, 0, 0, "-", "buildutils_tiledb_frame"], [0, 0, 0, "-", "dataloader"], [0, 0, 0, "-", "queryutils_tiledb_frame"], [1, 0, 0, "-", "slurm"], [0, 0, 0, "-", "utils_anndata"]], "cellarr.CellArrDataset": [[0, 1, 1, "", "CellArrCellIterator"], [0, 1, 1, "", "CellArrDataset"], [0, 1, 1, "", "CellArrSampleIterator"]], "cellarr.CellArrDataset.CellArrCellIterator": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "__iter__"], [0, 2, 1, "", "__next__"]], "cellarr.CellArrDataset.CellArrDataset": [[0, 2, 1, "", "__del__"], [0, 2, 1, "", "__enter__"], [0, 2, 1, "", "__exit__"], [0, 2, 1, "", "__getitem__"], [0, 2, 1, "", "__init__"], [0, 2, 1, "", "__len__"], [0, 2, 1, "", "__repr__"], [0, 2, 1, "", "get_cell_metadata_column"], [0, 2, 1, "", "get_cell_metadata_columns"], [0, 2, 1, "", "get_cell_subset"], [0, 2, 1, "", "get_cells_for_sample"], [0, 2, 1, "", "get_gene_annotation_column"], [0, 2, 1, "", "get_gene_annotation_columns"], [0, 2, 1, "", "get_gene_annotation_index"], [0, 2, 1, "", "get_gene_subset"], [0, 2, 1, "", "get_matrix_subset"], [0, 2, 1, "", "get_number_of_cells"], [0, 2, 1, "", "get_number_of_features"], [0, 2, 1, "", "get_number_of_samples"], [0, 2, 1, "", "get_sample_metadata_column"], [0, 2, 1, "", "get_sample_metadata_columns"], [0, 2, 1, "", "get_sample_metadata_index"], [0, 2, 1, "", "get_sample_subset"], [0, 2, 1, "", "get_slice"], [0, 2, 1, "", "itercells"], [0, 2, 1, "", "itersamples"], [0, 3, 1, "", "shape"]], "cellarr.CellArrDataset.CellArrSampleIterator": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "__iter__"], [0, 2, 1, "", "__next__"]], "cellarr.CellArrDatasetSlice": [[0, 1, 1, "", "CellArrDatasetSlice"]], "cellarr.CellArrDatasetSlice.CellArrDatasetSlice": [[0, 4, 1, "", "__annotations__"], [0, 4, 1, "", "__dataclass_fields__"], [0, 4, 1, "", "__dataclass_params__"], [0, 2, 1, "", "__eq__"], [0, 4, 1, "", "__hash__"], [0, 2, 1, "", "__init__"], [0, 2, 1, "", "__len__"], [0, 4, 1, "", "__match_args__"], [0, 2, 1, "", "__repr__"], [0, 4, 1, "", "cell_metadata"], [0, 4, 1, "", "gene_annotation"], [0, 2, 1, "", "get_assays"], [0, 4, 1, "", "matrix"], [0, 3, 1, "", "shape"], [0, 2, 1, "", "to_anndata"], [0, 2, 1, "", "to_summarizedexperiment"]], "cellarr.autoencoder": [[0, 1, 1, "", "AutoEncoder"], [0, 1, 1, "", "Decoder"], [0, 1, 1, "", "Encoder"]], "cellarr.autoencoder.AutoEncoder": [[0, 4, 1, "", "__annotations__"], [0, 2, 1, "", "__init__"], [0, 2, 1, "", "configure_optimizers"], [0, 2, 1, "", "forward"], [0, 2, 1, "", "get_loss"], [0, 2, 1, "", "load_state"], [0, 2, 1, "", "on_validation_epoch_end"], [0, 2, 1, "", "on_validation_epoch_start"], [0, 2, 1, "", "save_all"], [0, 2, 1, "", "training_step"], [0, 2, 1, "", "validation_step"]], "cellarr.autoencoder.Decoder": [[0, 4, 1, "", "__annotations__"], [0, 2, 1, "", "__init__"], [0, 2, 1, "", "forward"], [0, 2, 1, "", "load_state"], [0, 2, 1, "", "save_state"]], "cellarr.autoencoder.Encoder": [[0, 4, 1, "", "__annotations__"], [0, 2, 1, "", "__init__"], [0, 2, 1, "", "forward"], [0, 2, 1, "", "load_state"], [0, 2, 1, "", "save_state"]], "cellarr.build_cellarrdataset": [[0, 5, 1, "", "build_cellarrdataset"], [0, 5, 1, "", "generate_metadata_tiledb_csv"], [0, 5, 1, "", "generate_metadata_tiledb_frame"]], "cellarr.build_options": [[0, 1, 1, "", "CellMetadataOptions"], [0, 1, 1, "", "GeneAnnotationOptions"], [0, 1, 1, "", "MatrixOptions"], [0, 1, 1, "", "SampleMetadataOptions"]], "cellarr.build_options.CellMetadataOptions": [[0, 4, 1, "", "__annotations__"], [0, 4, 1, "", "__dataclass_fields__"], [0, 4, 1, "", "__dataclass_params__"], [0, 2, 1, "", "__eq__"], [0, 4, 1, "", "__hash__"], [0, 2, 1, "", "__init__"], [0, 4, 1, "", "__match_args__"], [0, 2, 1, "", "__repr__"], [0, 4, 1, "", "column_names"], [0, 4, 1, "id0", "column_types"], [0, 4, 1, "id1", "dtype"], [0, 4, 1, "id2", "skip"], [0, 4, 1, "id3", "tiledb_store_name"]], "cellarr.build_options.GeneAnnotationOptions": [[0, 4, 1, "", "__annotations__"], [0, 4, 1, "", "__dataclass_fields__"], [0, 4, 1, "", "__dataclass_params__"], [0, 2, 1, "", "__eq__"], [0, 4, 1, "", "__hash__"], [0, 2, 1, "", "__init__"], [0, 4, 1, "", "__match_args__"], [0, 2, 1, "", "__repr__"], [0, 4, 1, "id4", "column_types"], [0, 4, 1, "id5", "dtype"], [0, 4, 1, "id6", "feature_column"], [0, 4, 1, "id7", "skip"], [0, 4, 1, "id8", "tiledb_store_name"]], "cellarr.build_options.MatrixOptions": [[0, 4, 1, "", "__annotations__"], [0, 4, 1, "", "__dataclass_fields__"], [0, 4, 1, "", "__dataclass_params__"], [0, 2, 1, "", "__eq__"], [0, 4, 1, "", "__hash__"], [0, 2, 1, "", "__init__"], [0, 4, 1, "", "__match_args__"], [0, 2, 1, "", "__repr__"], [0, 2, 1, "id9", "consolidate_duplicate_gene_func"], [0, 4, 1, "id10", "dtype"], [0, 4, 1, "id11", "matrix_attr_name"], [0, 4, 1, "id12", "matrix_name"], [0, 4, 1, "id13", "skip"], [0, 4, 1, "id14", "tiledb_store_name"]], "cellarr.build_options.SampleMetadataOptions": [[0, 4, 1, "", "__annotations__"], [0, 4, 1, "", "__dataclass_fields__"], [0, 4, 1, "", "__dataclass_params__"], [0, 2, 1, "", "__eq__"], [0, 4, 1, "", "__hash__"], [0, 2, 1, "", "__init__"], [0, 4, 1, "", "__match_args__"], [0, 2, 1, "", "__repr__"], [0, 4, 1, "id15", "column_types"], [0, 4, 1, "id16", "dtype"], [0, 4, 1, "id17", "skip"], [0, 4, 1, "id18", "tiledb_store_name"]], "cellarr.buildutils_tiledb_array": [[0, 5, 1, "", "create_group"], [0, 5, 1, "", "create_tiledb_array"], [0, 5, 1, "", "optimize_tiledb_array"], [0, 5, 1, "", "write_csr_matrix_to_tiledb"]], "cellarr.buildutils_tiledb_frame": [[0, 5, 1, "", "append_to_tiledb_frame"], [0, 5, 1, "", "create_tiledb_frame_from_chunk"], [0, 5, 1, "", "create_tiledb_frame_from_column_names"], [0, 5, 1, "", "create_tiledb_frame_from_dataframe"], [0, 5, 1, "", "infer_column_types"]], "cellarr.dataloader": [[0, 1, 1, "", "BaseBatchSampler"], [0, 1, 1, "", "DataModule"], [0, 1, 1, "", "scDataset"]], "cellarr.dataloader.BaseBatchSampler": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "__iter__"], [0, 2, 1, "", "__len__"], [0, 4, 1, "", "__orig_bases__"], [0, 4, 1, "", "__parameters__"]], "cellarr.dataloader.DataModule": [[0, 4, 1, "", "__annotations__"], [0, 2, 1, "", "__del__"], [0, 2, 1, "", "__init__"], [0, 2, 1, "", "__repr__"], [0, 2, 1, "", "collate"], [0, 2, 1, "", "filter_db"], [0, 2, 1, "", "train_dataloader"], [0, 2, 1, "", "val_dataloader"]], "cellarr.dataloader.scDataset": [[0, 4, 1, "", "__annotations__"], [0, 2, 1, "", "__getitem__"], [0, 2, 1, "", "__init__"], [0, 2, 1, "", "__len__"], [0, 4, 1, "", "__parameters__"], [0, 2, 1, "", "__repr__"]], "cellarr.queryutils_tiledb_frame": [[0, 5, 1, "", "get_a_column"], [0, 5, 1, "", "get_index"], [0, 5, 1, "", "get_schema_names_frame"], [0, 5, 1, "", "subset_array"], [0, 5, 1, "", "subset_frame"]], "cellarr.slurm": [[1, 0, 0, "-", "build_cellarr_steps"], [1, 0, 0, "-", "final_assembly"], [1, 0, 0, "-", "finalize_matrix"], [1, 0, 0, "-", "process_cell_metadata"], [1, 0, 0, "-", "process_gene_annotation"], [1, 0, 0, "-", "process_matrix"], [1, 0, 0, "-", "process_matrix_all"], [1, 0, 0, "-", "process_sample_metadata"]], "cellarr.slurm.build_cellarr_steps": [[1, 1, 1, "", "SlurmBuilder"], [1, 5, 1, "", "main"]], "cellarr.slurm.build_cellarr_steps.SlurmBuilder": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "create_array_script"], [1, 2, 1, "", "create_slurm_script"], [1, 2, 1, "", "submit_cell_metadata_job"], [1, 2, 1, "", "submit_final_assembly"], [1, 2, 1, "", "submit_gene_annotation_job"], [1, 2, 1, "", "submit_job"], [1, 2, 1, "", "submit_matrix_processing"], [1, 2, 1, "", "submit_sample_metadata_job"]], "cellarr.slurm.final_assembly": [[1, 5, 1, "", "final_assembly"]], "cellarr.slurm.finalize_matrix": [[1, 5, 1, "", "finalize_matrix"]], "cellarr.slurm.process_cell_metadata": [[1, 5, 1, "", "process_cell_metadata"]], "cellarr.slurm.process_gene_annotation": [[1, 5, 1, "", "process_gene_annotation"]], "cellarr.slurm.process_matrix": [[1, 5, 1, "", "process_matrix_file"]], "cellarr.slurm.process_matrix_all": [[1, 5, 1, "", "process_matrix"]], "cellarr.slurm.process_sample_metadata": [[1, 5, 1, "", "process_sample_metadata"]], "cellarr.utils_anndata": [[0, 5, 1, "", "consolidate_duplicate_symbols"], [0, 5, 1, "", "extract_anndata_info"], [0, 5, 1, "", "remap_anndata"], [0, 5, 1, "", "scan_for_cellcounts"], [0, 5, 1, "", "scan_for_cellmetadata"], [0, 5, 1, "", "scan_for_features"], [0, 5, 1, "", "scan_for_features_annotations"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "terms": {"": [0, 4, 5, 8, 9, 10], "0": [0, 5, 6, 9, 10], "005": 0, "1": [0, 5, 6, 8, 9, 10], "10": [9, 10], "100": [0, 9, 10], "1000": [0, 9, 10], "10000": 0, "1024": [0, 9, 10], "11": 10, "1100": 10, "11x3": 9, "128": [0, 8, 9, 10], "1e4": [0, 9, 10], "2": [0, 5, 6, 8, 9, 10], "2024": 7, "24": 1, "247": 10, "25000": 0, "299": 10, "3": [0, 5, 6, 10], "306": 10, "337": 10, "358": 10, "4": [0, 1, 6, 9, 10], "446": 9, "447": 10, "5": [0, 6, 9, 10], "500": [9, 10], "500kb": 5, "61": 4, "64": 1, "68": 10, "7": 5, "8": [4, 9], "8000": 5, "9": 9, "945": 9, "A": [0, 6, 7], "AND": 7, "AS": 7, "BE": [5, 7], "BUT": 7, "By": 5, "FOR": 7, "For": [0, 4, 5, 8, 9, 10], "IN": 7, "IT": 5, "If": [0, 5, 8, 9, 10], "In": [0, 5, 8], "It": 8, "NO": 7, "NOT": 7, "OF": [5, 7], "OR": [5, 7], "Or": 9, "THE": [5, 7], "TO": [5, 7], "The": [0, 4, 5, 7, 8, 9, 10], "There": [0, 10], "These": 8, "To": [6, 9, 10], "WITH": 7, "_": 0, "__annotations__": [0, 2], "__dataclass_fields__": [0, 2], "__dataclass_params__": [0, 2], "__del__": [0, 2], "__enter__": [0, 2], "__eq__": [0, 2], "__exit__": [0, 2], "__getitem__": [0, 2], "__hash__": [0, 2], "__init__": [0, 1, 2], "__iter__": [0, 2], "__len__": [0, 2, 4], "__match_args__": [0, 2], "__next__": [0, 2], "__orig_bases__": [0, 2], "__parameters__": [0, 2], "__repr__": [0, 2, 4], "__str__": 4, "_build": 5, "_core": 10, "_dataclassparam": 0, "_field": 0, "_field_typ": 0, "_missing_typ": 0, "abbrev": 5, "abca1": 10, "abl": 5, "about": 5, "abov": 7, "access": [0, 4, 10], "accident": 5, "accord": 5, "accordingli": 5, "account": 5, "across": [0, 4, 6, 8, 9, 10], "action": 7, "activ": [5, 9], "ad": [0, 4, 5, 9, 10], "adata": [0, 10], "adata1": [0, 4, 9, 10], "adata2": [0, 4, 9, 10], "add": [0, 4, 5], "addit": [0, 4, 5], "addition": [0, 8, 10], "affect": 4, "after": [1, 5, 10], "alcam": 10, "alia": 0, "aligned_df": 10, "all": [0, 1, 4, 5, 7, 8, 9, 10], "allow": [0, 9, 10], "along": [0, 4, 9, 10], "alreadi": 5, "also": [0, 5, 9, 10], "altern": 0, "although": 4, "an": [0, 4, 7, 8, 9, 10], "analysi": [9, 10], "ani": [0, 5, 7, 9, 10], "anndata": [0, 4, 8, 9, 10], "annot": [0, 1, 9, 10], "anyth": 5, "api": 5, "append": 0, "append_to_tiledb_fram": [0, 2], "appli": 5, "appreci": 5, "ar": [0, 4, 5, 8, 9, 10], "arang": 10, "architectur": [5, 9], "arg": [0, 1], "args_json": 1, "argument": 0, "aris": 7, "arrai": [0, 1, 4, 6], "ascii": [0, 4, 8, 9, 10], "assai": [0, 4, 9, 10], "assay_tiledb_group": [0, 4], "assay_uri": [0, 4], "assembli": 1, "assist": 8, "associ": [0, 7], "assum": 5, "assumpt": [0, 5, 8, 10], "atrribut": 0, "attribut": [0, 9, 10], "author": [5, 6, 7], "autoencod": [2, 9, 10], "autom": 5, "automat": [0, 5, 8, 9, 10], "av": 5, "avail": [0, 5], "avoid": 5, "ax": [9, 10], "axi": 0, "a\u3042\u00e4": 8, "b": [5, 8], "back": [0, 6, 9, 10], "backward": [0, 4], "base": [0, 1, 4, 5], "basebatchsampl": [0, 2], "basic": [0, 1, 10], "batch": [0, 4, 9, 10], "batch_idx": 0, "batch_siz": [0, 9, 10], "becaus": [0, 9, 10], "been": [5, 9], "befor": [0, 5, 10], "behav": 8, "behavior": [0, 4, 5], "behind": 5, "being": 5, "best": [0, 5, 8], "between": [0, 8, 9, 10], "big": 5, "bin": 5, "binari": 5, "bioconductor": 9, "bitbucket": 5, "black": 5, "bool": 0, "boolean": 0, "both": 4, "bottom": 5, "bound": [0, 4], "branch": 5, "break": [4, 5], "breakpoint": 5, "browser": 5, "bsz": 0, "bug": 5, "bugfix": 5, "build": [0, 4, 5, 6, 8], "build_cellarr_step": [0, 2], "build_cellarrdataset": [2, 4, 9, 10], "build_opt": 2, "builder": 1, "buildutils_tiledb_arrai": 2, "buildutils_tiledb_fram": 2, "built": [0, 4, 5], "button": 5, "byte": 4, "c": 7, "cach": 0, "calcul": 0, "call": [0, 4, 8], "callabl": 0, "can": [0, 4, 5, 8, 9, 10], "case": [0, 5], "cast": 0, "caus": 5, "cd": [0, 4, 5], "cd109": 10, "cd52": 10, "cd59": 10, "cd83": 10, "cd9": 10, "cell": [0, 1, 4, 6], "cell1_": 10, "cell_index": 0, "cell_metadata": [0, 2, 4, 8, 9, 10], "cell_metadata_opt": [0, 9, 10], "cell_metadata_uri": [0, 9, 10], "cell_opt": 1, "cell_subset": 0, "cellar": [0, 9, 10], "cellarr": [4, 5, 9, 10], "cellarr_build": 9, "cellarr_cell_index_in_sampl": 10, "cellarr_gene_index": [0, 9, 10], "cellarr_original_gene_set": 0, "cellarr_sampl": [0, 10], "cellarr_sample_end_index": 4, "cellarr_sample_start_index": 4, "cellarrcelliter": [0, 2], "cellarrdataset": [1, 2, 4, 6], "cellarrdatasetslic": [2, 4, 9, 10], "cellarrdatset": 0, "cellarrsampleiter": [0, 2], "cellid": [9, 10], "cellmetadataopt": [0, 2, 9, 10], "celltype_id": 0, "certain": 8, "cfg": 5, "chang": [0, 4, 9, 10], "changelog": 6, "charact": 6, "charg": 7, "check": [5, 9, 10], "checkout": 5, "chore": 4, "chosen": [0, 9, 10], "chunk": [0, 8], "chunksiz": 0, "ci": 5, "claim": 7, "clarif": 8, "class": [0, 1, 4, 5, 9, 10], "clean": 5, "cli": 9, "click": 5, "close": 5, "clutter": 5, "code": 6, "codec": 8, "coerc": 4, "coher": 5, "col_typ": 0, "collabor": 5, "collat": [0, 2], "collect": [0, 4, 5, 6, 9, 10], "column": [0, 4, 6], "column_data": 10, "column_dtyp": 0, "column_nam": [0, 2, 10], "column_subset": 0, "column_typ": [0, 2, 9, 10], "com": [0, 3, 5], "come": 5, "command": [5, 9], "commit": 5, "common": 4, "commonmark": 5, "commun": 5, "compani": 5, "compar": [0, 8], "compat": [0, 4, 5], "compil": 5, "complet": [1, 5], "composit": 0, "comput": [0, 10], "concaten": 0, "concept": 5, "concurr": 4, "conda": [5, 9], "condit": [4, 7], "conduct": 5, "config": 0, "configur": [0, 5], "configure_optim": [0, 2], "confus": 5, "connect": [0, 7], "consid": [0, 5, 8, 9, 10], "consider": 5, "consist": [0, 6, 9, 10], "consolid": [0, 10], "consolidate_duplicate_gene_func": [0, 2], "consolidate_duplicate_symbol": [0, 2], "construct": [0, 4, 9], "constructor": 0, "contain": [0, 6, 9, 10], "content": [2, 5], "context": 0, "continu": [5, 8], "contract": 7, "contribut": 6, "contributor": 5, "convers": 4, "convert": [0, 9, 10], "coordin": [9, 10], "copi": [5, 7], "copyright": 7, "core": 0, "correct": 5, "correctli": 5, "correspond": 0, "count": [0, 1, 4, 8, 9, 10], "cov": 5, "cpm": 10, "cpu": [1, 9], "cpus_per_task": 1, "creat": [0, 1, 4, 8, 9, 10], "create_array_script": [0, 1], "create_group": [0, 2], "create_slurm_script": [0, 1], "create_tiledb_arrai": [0, 2], "create_tiledb_frame_from_chunk": [0, 2], "create_tiledb_frame_from_column_nam": [0, 2], "create_tiledb_frame_from_datafram": [0, 2], "creation": [1, 4], "csc": 4, "csr": 0, "csr_matrix": 0, "csv": [0, 4], "current": [0, 5, 9], "custom": [0, 9], "cxcl16": 10, "cy": 3, "d": 10, "damag": 7, "data": [0, 4, 6, 9, 10], "data_df": 0, "dataclass": 0, "datafram": [0, 4, 8, 9, 10], "dataload": [2, 4, 6], "datamodul": [0, 2, 9, 10], "dataset": [0, 4, 9, 10], "dataset_cl": 0, "dataset_path": [0, 4, 9, 10], "deal": 7, "decid": 5, "decod": [0, 2], "decoder_filenam": 0, "decor": 5, "dedic": 5, "def": 10, "defaul": 0, "default": [0, 4, 9, 10], "default_factori": 0, "defin": [0, 10], "definit": 5, "dens": 4, "depend": [1, 5, 9], "describ": [0, 5], "descript": 5, "design": [0, 5, 9, 10], "detail": [5, 9, 10], "develop": 5, "dict": 0, "dictionari": 0, "differ": [0, 5, 8, 9, 10], "differenti": 0, "dimens": [0, 9, 10], "dimension": [0, 9, 10], "dir": [0, 9, 10], "directori": [0, 1, 5, 9, 10], "dirti": 5, "discuss": 5, "disk": [4, 5], "dist": 5, "distribut": [5, 7], "divers": [0, 4, 9], "dmb": 10, "do": [5, 7], "doc": [0, 5, 10], "docformatt": 4, "docstr": 5, "document": [4, 6, 7, 8, 9, 10], "don": 5, "done": 5, "dot": 10, "doubt": 5, "dpb1": 10, "dqa1": 10, "dqb1": 10, "draft": 5, "drop": 5, "dropout": [0, 9, 10], "dtype": [0, 2, 4, 9, 10], "dump": 9, "dunder": 4, "duplic": 0, "dure": [4, 9, 10], "e": [0, 5, 9, 10], "each": [0, 4, 8, 9, 10], "easi": 5, "easili": [5, 9, 10], "edit": 5, "editor": 5, "egg": 5, "either": [4, 5, 8, 9], "element": [9, 10], "emp1": 10, "empti": [0, 4], "encapsul": 0, "encod": [0, 2, 8], "encoder_filenam": 0, "end": 0, "enough": 10, "ensur": [0, 9, 10], "entir": [0, 9, 10], "entri": 0, "enumer": 0, "environ": 4, "eol": 4, "epoch": [0, 9, 10], "eq": 0, "error": 5, "especi": [5, 9], "etc": 0, "evalu": 0, "even": [0, 5, 8, 9, 10], "event": 7, "eventu": 5, "everyth": 5, "examin": 10, "exampl": [0, 5, 9, 10], "exc_tb": 0, "exc_typ": 0, "exc_val": 0, "excel": 5, "exclud": 0, "exist": [0, 9, 10], "expect": [0, 4, 5, 8, 9, 10], "experi": [0, 5, 6, 8, 9, 10], "experiment": [0, 4, 6, 9, 10], "explan": 5, "explicitli": 4, "express": [0, 4, 7, 9, 10], "expression_data": [9, 10], "extend": 0, "extens": 5, "extra": 5, "extract": [0, 4, 9, 10], "extract_anndata_info": [0, 2], "f": 10, "face": [4, 5], "factor": 5, "fairli": [8, 9], "fall": 5, "fals": [0, 9, 10], "familiar": 5, "fastest": [0, 9, 10], "featur": [0, 5, 8, 9, 10], "feature_column": [0, 2, 10], "feature_id": 0, "feature_set_ord": 0, "feedback": 5, "feel": 5, "fetch": 5, "few": [0, 4, 5, 8, 9, 10], "field": [0, 9], "file": [0, 1, 4, 5, 7, 8, 9, 10], "filenam": 0, "fill": [4, 9, 10], "filter": [0, 4], "filter_db": [0, 2], "final": 1, "final_assembli": [0, 2], "finalize_matrix": [0, 2], "find": 5, "fine": 5, "finish": 5, "fire": 5, "first": [0, 4, 5, 10], "fit": [0, 7, 9, 10], "fix": [4, 5], "flag": 5, "flake8": 5, "float": [0, 8], "float32": [0, 4, 9, 10], "focu": 5, "focus": 5, "folder": 5, "follow": [4, 5, 7, 8, 9], "forget": 5, "fork": 5, "form": 5, "format": [0, 9], "formatt": 4, "forward": [0, 2], "foundat": 5, "four": [0, 10], "fragment": [0, 10], "frame": [0, 8], "framework": [0, 4], "free": [5, 7], "freecodecamp": 5, "freshli": 5, "from": [0, 1, 4, 5, 6, 7, 9, 10], "frozen": 0, "function": [0, 4, 5, 10], "furnish": 7, "further": 8, "g": [0, 5, 9, 10], "gb": 1, "gene": [0, 1, 8, 9, 10], "gene_": 10, "gene_1": [0, 9, 10], "gene_10": 10, "gene_50": [0, 9], "gene_500": 10, "gene_95": [0, 9], "gene_annot": [0, 2, 9, 10], "gene_annotation_opt": 0, "gene_annotation_uri": [0, 9, 10], "gene_annotations_opt": 0, "gene_index": [0, 10], "gene_indic": [9, 10], "gene_list": [0, 9, 10], "gene_metadata": 0, "gene_opt": 1, "gene_ord": [0, 10], "gene_subset": 0, "geneannotationopt": [0, 2, 10], "gener": [0, 4, 5, 8, 9, 10], "generate_adata": 10, "generate_metadata_tiledb_csv": [0, 2], "generate_metadata_tiledb_fram": [0, 2], "genom": [6, 9, 10], "gerrit": 5, "get": [0, 4, 5, 6, 9, 10], "get_a_column": [0, 2], "get_assai": [0, 2], "get_cell_metadata_column": [0, 2], "get_cell_subset": [0, 2], "get_cells_for_sampl": [0, 2, 4], "get_gene_annotation_column": [0, 2], "get_gene_annotation_index": [0, 2], "get_gene_subset": [0, 2], "get_index": [0, 2], "get_loss": [0, 2], "get_matrix_subset": [0, 2], "get_number_of_cel": [0, 2], "get_number_of_featur": [0, 2], "get_number_of_sampl": [0, 2], "get_sample_metadata_column": [0, 2], "get_sample_metadata_index": [0, 2], "get_sample_subset": [0, 2], "get_schema_names_fram": [0, 2], "get_slic": [0, 2], "git": 5, "github": [5, 8], "gitlab": 5, "given": 0, "gmail": 3, "go": 5, "good": 5, "gotcha": 8, "gpnmb": 10, "gpr183": 10, "gpu": 0, "grant": 7, "graph": 5, "group": [0, 4, 5, 9], "group_nam": 0, "guid": 5, "guidelin": 5, "h5ad": [0, 4, 8, 9, 10], "h5ad_or_adata": 0, "ha": 9, "handi": 5, "handl": [4, 6], "hash": [0, 5], "have": [5, 9, 10], "help": [0, 5, 6, 8], "henc": [0, 8, 10], "here": [0, 9], "herebi": 7, "hidden": 0, "hidden_dim": [0, 9, 10], "highli": 5, "histori": 5, "hla": 10, "hold": 5, "holder": 7, "home": 10, "hook": 5, "host": 5, "hour": 1, "how": [0, 4], "hpc": 4, "html": 5, "http": [0, 5, 9], "i": [0, 4, 5, 6, 7, 8, 9, 10], "icon": 5, "id": [0, 1, 4, 8, 9, 10], "idea": 5, "identifi": [0, 5], "idx": 0, "ignor": 8, "il6st": 10, "illustr": 5, "implement": 4, "impli": 7, "implicitmodificationwarn": 10, "import": [0, 5, 9, 10], "improv": [4, 6], "includ": [0, 1, 4, 5, 7, 9, 10], "inclus": [0, 4], "inconsist": [9, 10], "index": [0, 1, 4, 5, 6, 8, 9, 10], "index_col": 0, "indic": [0, 1, 4], "infer": 0, "infer_column_typ": [0, 2], "info": [0, 5], "inform": [0, 1, 5, 6, 9, 10], "ingest": 4, "init": 0, "initi": [0, 1, 9, 10], "input": [0, 1, 8, 9, 10], "input_dropout": [0, 9, 10], "inspir": 9, "instal": 5, "instanti": 10, "instead": [0, 5], "instruct": 5, "int": [0, 1], "int16": [0, 4, 9], "int2sampl": 0, "int32": 0, "integ": [0, 8], "integr": 5, "intend": 0, "interact": 5, "interest": 5, "interfac": 5, "intern": [4, 5], "interop": 4, "introduc": 4, "invers": 0, "involv": 9, "irrespect": 0, "is_spars": 0, "isol": 5, "issu": [4, 6, 8], "item": 5, "iter": [0, 4, 10], "itercel": [0, 2], "itersampl": [0, 2], "itgax": 10, "its": [5, 9], "j": 10, "jayaram": [3, 7], "job": [1, 9], "job_nam": 1, "json": 9, "just": [0, 5, 9, 10], "k": [5, 10], "kancherla": [3, 7], "kei": 0, "kept": 5, "kevin": 3, "kevinyang10": 3, "kind": [5, 7], "kuo": [3, 4], "kw_onli": 0, "kwarg": 0, "label": [0, 4, 5, 9, 10], "label_column_nam": [0, 9, 10], "lack": [9, 10], "languag": 5, "larg": [0, 4, 6, 8, 9, 10], "last": [0, 8], "latent": 0, "latent_dim": [0, 9, 10], "layer": [0, 4, 8, 10], "layer_matrix_nam": [0, 10], "learn": 0, "least": 5, "len": [9, 10], "length": 0, "let": 10, "level": 4, "liabil": 7, "liabl": 7, "lib": 10, "licens": 6, "lightn": [0, 4], "lightningdatamodul": 0, "lightningmodul": 0, "like": 5, "limit": [0, 1, 7], "limit_train_batch": [9, 10], "line": 8, "link": 5, "list": [0, 4, 5, 9, 10], "littl": 5, "load": [0, 4], "load_stat": [0, 2], "loc": 10, "local": [0, 5], "localhost": 5, "locat": [8, 9], "log": [0, 1, 4, 5, 9], "log_dir": 1, "log_every_n_step": [9, 10], "logger": [9, 10], "lognorm": [0, 9, 10], "long": [0, 10], "look": 5, "loss": 0, "lot": 5, "lpl": 10, "lr": 0, "m": 5, "machin": [4, 5], "made": 5, "mai": [0, 4, 5, 8, 9, 10], "main": [0, 1, 5], "maintain": 6, "major": [4, 5], "make": [0, 5, 8, 9, 10], "mani": 0, "manifest": 9, "manual": 5, "map": [0, 1, 8, 9, 10], "mappingproxi": 0, "mark": 5, "markup": 5, "match": [0, 8, 10], "materi": 0, "matric": [0, 4, 9, 10], "matrix": [0, 1, 2, 4, 8, 9, 10], "matrix_attr_nam": [0, 2], "matrix_dim_dtyp": 0, "matrix_nam": [0, 1, 2, 4, 9], "matrix_opt": [0, 1, 4, 9, 10], "matrix_uri": [0, 9, 10], "matrixopt": [0, 2, 4, 9, 10], "max": 0, "max_epoch": [9, 10], "mean": 5, "measur": [0, 9, 10], "mechan": 5, "memori": [0, 1, 9, 10], "memory_gb": 1, "mention": [4, 5], "merchant": 7, "merg": [0, 5, 7], "mertk": 10, "messag": 5, "metadata": [0, 1, 4, 6], "method": [0, 4, 5, 8, 10], "might": 5, "million": [6, 9, 10], "min_sample_s": 0, "mind": 5, "mini": 0, "minibatch": 0, "miniconda": 5, "miniforge3": 9, "minim": [5, 9], "minimum": 0, "minio": 0, "minor": 4, "miss": [5, 9, 10], "mistak": 5, "mit": 7, "mix": 8, "mkdtemp": [0, 9, 10], "ml": 9, "mock": 10, "model": [0, 5, 9, 10], "model_path": [0, 9, 10], "modif": [0, 10], "modifi": [5, 7, 10], "modul": [2, 5, 6], "more": [0, 5, 9, 10], "moreov": 5, "most": [0, 8], "mostli": 0, "motiv": 5, "mrc1": 10, "msr1": 10, "multi_index": 0, "multipl": [0, 4, 6, 9, 10], "multiprocess": 0, "multiprocessing_context": 0, "must": [0, 8, 9, 10], "my": 5, "mymodel": [9, 10], "myst": 5, "n": [5, 9, 10], "n_gene": [0, 9, 10], "n_ob": 10, "n_task": 1, "n_var": 10, "na": [0, 9, 10], "name": [0, 5, 8, 10], "nan": [0, 6], "nan_str": 0, "navig": 5, "ndarrai": 0, "necessari": 9, "need": [0, 5, 9], "never": 5, "new": [0, 4, 5, 9, 10], "next": [0, 10], "non": [0, 5], "non_zero_cel": 9, "none": [0, 1, 6], "noninfring": 7, "norm": [4, 9], "normal": [0, 5, 9, 10], "note": [0, 4, 6], "notic": [5, 7], "now": 4, "np": [0, 4, 9, 10], "nrp2": 10, "num_thread": [0, 4, 9], "num_work": 0, "number": [0, 8, 9, 10], "number_of_column": 10, "number_of_row": 10, "numer": 0, "numpi": [0, 9, 10], "ob": [0, 10], "obj": 0, "object": [0, 1, 4, 6, 8, 9, 10], "object1": [0, 9, 10], "object2": [0, 9, 10], "obs_df": 10, "obs_subset_column": 0, "obtain": 7, "occur": 5, "offset": [0, 4], "often": 5, "old": 5, "olr1": 10, "on_validation_epoch_end": [0, 2], "on_validation_epoch_start": [0, 2], "onc": [5, 9], "one": [0, 5, 9, 10], "onelin": 5, "onli": [0, 9], "open": [5, 9], "oper": [4, 5], "optim": [0, 4, 10], "optimize_tiledb": 0, "optimize_tiledb_arrai": [0, 2], "option": [0, 4, 5, 6, 8], "order": [0, 5, 9, 10], "ordin": 8, "org": [5, 9], "organ": 9, "orient": [0, 9, 10], "origin": [0, 1, 5, 9, 10], "other": [0, 4, 5, 7], "otherwis": 7, "our": 8, "out": [5, 7, 9, 10], "output": [0, 1, 8, 9], "output_dir": 1, "output_path": [0, 4, 9, 10], "output_uri": 0, "outsid": [0, 10], "over": [0, 4], "own": 10, "packag": [2, 4, 5, 6, 8, 9], "page": [5, 6], "panda": [0, 10], "paragraph": 5, "parallel": 4, "param": [9, 10], "paramet": [0, 1, 4, 10], "part": 5, "particular": [4, 7], "pass": 5, "path": [0, 1, 5, 8, 9, 10], "pattern": 5, "pd": 10, "pdb": 5, "pencil": 5, "per": [1, 9, 10], "perfectli": 5, "perform": 4, "permiss": [5, 7], "permit": 7, "persist": 0, "persistent_work": 0, "person": 7, "pick": 9, "pip": [5, 6, 9, 10], "pipx": 5, "pl": [9, 10], "pleas": [5, 8, 10], "plu": 0, "pool": 4, "portion": 7, "posit": [0, 8], "potenti": 5, "pr": 5, "pre": 5, "precommit": 4, "prefer": 8, "present": 0, "pretti": 5, "preview": 5, "previous": [4, 5], "primari": 0, "primary_key_column_nam": 0, "principl": 5, "print": [0, 8, 9, 10], "privat": 5, "problem": 5, "process": [0, 1, 4, 5, 8, 9, 10], "process_cell_metadata": [0, 2], "process_gene_annot": [0, 2], "process_matrix": [0, 2], "process_matrix_al": [0, 2], "process_matrix_fil": [0, 1], "process_sample_metadata": [0, 2], "profil": [4, 9], "program": 5, "project": [5, 9], "promot": 5, "properti": [0, 4], "proport": 0, "propos": 5, "proprietari": 5, "provid": [0, 4, 5, 6, 7, 8], "pseudo_bulk_log_norm": 9, "ptprj": 10, "public": 5, "publicli": 5, "publish": [5, 7], "pull": 5, "purpos": 7, "push": 5, "py": 10, "pypi": [5, 6, 9, 10], "pyscaffold": [5, 9], "pytest": 5, "python": [4, 5, 6, 9, 10], "python3": [5, 10], "python_env": [1, 9], "python_script": 1, "pytorch": [0, 4], "pytorch_lightn": [9, 10], "queri": [0, 4, 6], "querycondit": 0, "queryutils_tiledb_fram": 2, "quick": 5, "quickli": 5, "quit": 5, "r": [0, 4, 5, 9, 10], "rais": [0, 8], "ran": 4, "random": [0, 10], "rang": [0, 8, 10], "rate": 0, "rather": [0, 9, 10], "raw": 0, "re": 5, "read": [0, 9, 10], "read_h5ad": [0, 9, 10], "readabl": 5, "readi": [5, 9, 10], "readm": [4, 9], "realiz": 0, "reason": 5, "recent": 8, "recommend": 5, "record": 5, "recreat": 5, "recur": 5, "refer": [0, 4, 5, 6, 8, 10], "reformat": 0, "reject": 0, "rel": [0, 4], "relat": 0, "releas": 4, "reliabl": 5, "remap": [0, 4, 9, 10], "remap_anndata": [0, 2], "remot": 5, "remov": [4, 5], "remove_singleton_class": 0, "repl": 5, "replac": [4, 5], "report": 6, "repr": 0, "repres": [0, 4], "represent": [0, 9, 10], "reproduc": 5, "reproduct": 5, "request": 5, "requir": 5, "residu": [0, 9, 10], "resourc": 5, "respect": 5, "restrict": 7, "restructuredtext": 5, "result1": 0, "retain": 0, "retun": 10, "return": [0, 1, 5, 9, 10], "reus": [9, 10], "revers": 0, "review": [5, 8], "rf": 5, "right": 7, "rm": 5, "rna": [0, 9, 10], "root": 5, "row": 0, "row_data": 10, "row_nam": 10, "row_offset": 0, "row_subset": 0, "rst": 5, "ruff": 4, "run": [0, 5, 8, 9], "runner": 10, "s3": 0, "same": [0, 4, 5, 9, 10], "sampl": [0, 1, 4, 6, 9, 10], "sample2cel": 0, "sample_": 0, "sample_1": 10, "sample_1_slic": 4, "sample_column_nam": 0, "sample_metadata": [0, 9, 10], "sample_metadata_opt": 0, "sample_metadata_uri": 0, "sample_opt": 1, "sample_s": 0, "samplemetadataopt": [0, 2], "sampler": 0, "sampler_cl": 0, "sampling_by_class": 0, "save": 0, "save_al": [0, 2, 9, 10], "save_st": [0, 2], "scale": [0, 9, 10], "scan": [0, 8, 9, 10], "scan_for_cellcount": [0, 2], "scan_for_cellmetadata": [0, 2], "scan_for_featur": [0, 2], "scan_for_features_annot": [0, 2], "scdataset": [0, 2], "scenario": 0, "schema": 0, "scope": [0, 10], "script": [1, 5], "script_path": 1, "sdc2": 10, "search": [5, 6], "second": 0, "section": 5, "see": [5, 9], "seed": 10, "seem": 4, "self": 0, "sell": 7, "send": 5, "seq": [0, 9, 10], "sequenc": 0, "seri": 4, "serv": 10, "server": 5, "servic": 5, "session": 5, "set": [0, 1, 4, 9, 10], "setup": 5, "setuptool": 5, "sever": 5, "shall": 7, "shape": [0, 2, 4, 10], "should": [0, 5, 8, 9, 10], "shuffl": 0, "similar": [4, 5], "simpl": [0, 8, 9, 10], "simplest": 0, "simplifi": [5, 9], "sinc": 8, "singl": [0, 1, 4, 6, 9], "site": 10, "situat": 4, "six": 5, "size": [0, 5, 10], "skip": [0, 2], "slc11a1": 10, "slc1a3": 10, "slice": [0, 4, 10], "slot": [0, 8, 9, 10], "slurm": [0, 2, 4], "slurmbuild": [0, 1], "smooth": 8, "so": 7, "softwar": [5, 7], "solut": [5, 8], "solv": 5, "some": [0, 8, 9, 10], "sometim": 5, "sort": 5, "sourc": [0, 1, 5], "space": [0, 10], "spars": [0, 4, 9, 10], "sparsearrai": 0, "spawn": [0, 4], "specif": [0, 5, 9], "specifi": [0, 8, 9, 10], "sphinx": 5, "src": 5, "standard": [9, 10], "start": [0, 5, 6, 9, 10], "state": 0, "step": [0, 5, 9, 10], "still": 5, "storag": [0, 4], "store": [0, 1, 4, 6, 9, 10], "str": [0, 1, 8, 10], "string": [0, 4, 8], "structur": [4, 9], "studi": [0, 4, 9, 10], "study1": 10, "study100": 10, "study_column_nam": [0, 9, 10], "style": 5, "subject": [5, 7], "sublicens": 7, "submiss": 1, "submit": [1, 9], "submit_cell_metadata_job": [0, 1], "submit_final_assembli": [0, 1], "submit_gene_annotation_job": [0, 1], "submit_job": [0, 1], "submit_matrix_process": [0, 1], "submit_sample_metadata_job": [0, 1], "submodul": 2, "subpackag": 2, "subset": 0, "subset_arrai": [0, 2], "subset_fram": [0, 2], "substanti": 7, "success": 5, "sum": 0, "summari": 5, "summarizedexperi": [0, 9, 10], "super": 0, "support": [0, 4, 9], "suppos": 5, "sure": [0, 5, 10], "sv2c": 10, "symbol": [0, 8, 9, 10], "system": [4, 5], "t": [0, 5, 8, 10], "tag": [0, 5, 9, 10], "take": [0, 10], "target": 0, "target_sum": [0, 9, 10], "task": [1, 6, 9], "temp_dir": 1, "tempdir": [0, 4, 9, 10], "tempfil": [0, 9, 10], "templat": [5, 9, 10], "temporari": [0, 1, 9, 10], "tensor": 0, "term": 5, "terminologi": 5, "test": [0, 4, 5], "test3": 0, "text": 5, "than": [0, 9, 10], "thank": 4, "thei": [0, 5, 9, 10], "them": [0, 5, 8, 10], "thi": [0, 4, 5, 7, 8, 9, 10], "thing": 5, "think": 8, "though": 5, "thread": 0, "tileb": 4, "tiledb": [0, 4, 6, 8, 9, 10], "tiledb_array_uri": 0, "tiledb_obj": 0, "tiledb_store_nam": [0, 2], "tiledb_uri_path": 0, "time": [1, 4], "time_hour": 1, "tip": 5, "tissu": [9, 10], "tmp": 10, "tmp7tta1opt": 10, "to_anndata": [0, 2, 9, 10], "to_summarizedexperi": [0, 2, 9, 10], "toni": [3, 4], "too": [0, 5], "top": 5, "torch": 0, "tort": 7, "tox": [5, 10], "traceback": 8, "track": 4, "tracker": 5, "train": [0, 4, 9, 10], "train_dataload": [0, 2, 10], "train_dataset": 10, "trainer": [9, 10], "training_step": [0, 2], "transform": 10, "transpos": 0, "trem2": 10, "tricki": 5, "trivial": 5, "troubl": 5, "true": [0, 5, 9, 10], "try": 5, "tupl": [0, 1], "tutori": 4, "two": 4, "txt": 5, "type": [0, 1, 4, 8, 9, 10], "typic": [0, 9, 10], "u": [5, 8], "uint16": 0, "uint32": [0, 9], "uncom": 5, "under": [5, 8], "unexpectedli": 8, "unicod": 6, "unicodeencodeerror": 8, "uniformli": [0, 4, 9], "union": 0, "uniqu": [0, 9, 10], "unit": 5, "unix": 4, "unmeasur": [0, 9, 10], "unnecessari": 5, "unsafe_hash": 0, "unsign": 0, "unwant": 5, "up": [5, 9], "updat": [4, 5], "upload": 5, "upon": 5, "upper": [0, 4], "upstream": 5, "uri": 0, "url": 5, "us": [0, 4, 5, 7, 8, 9, 10], "usag": [4, 6], "use_gpu": 0, "user": [4, 5, 9, 10], "userwarn": 10, "usual": [0, 9, 10], "util": 0, "utils_anndata": 2, "v": 0, "v1": 5, "vaccum": 0, "val_dataload": [0, 2], "val_studi": [0, 10], "valid": [0, 5, 10], "validation_step": [0, 2], "valu": [0, 4, 6, 9, 10], "value_dtyp": 0, "valueerror": 0, "var": [0, 8, 9, 10], "var_df": 10, "var_feature_column": 0, "var_subset_column": 0, "variou": [0, 9], "ve": 8, "venv": 5, "verbos": 0, "veri": 5, "version": [0, 5, 6, 9], "via": 5, "virtual": 5, "virtualenv": 5, "w": [9, 10], "wa": [0, 4, 5], "wai": 5, "want": 5, "warn": 10, "warranti": 7, "we": [0, 5, 8, 10], "web": 5, "weight": 0, "weird": 5, "welcom": 5, "well": 5, "were": [9, 10], "what": 5, "when": [0, 4, 5, 8, 9, 10], "where": [0, 4, 9, 10], "whether": [0, 7], "which": [0, 4, 5, 9], "while": [0, 5, 8], "whom": 7, "window": 4, "within": [0, 1], "without": 7, "won": 0, "work": [0, 5, 10], "worker": 0, "workflow": [4, 5], "would": 5, "write": [0, 5, 8], "write_csr_matrix_to_tiledb": [0, 2], "written": [5, 8], "x": [0, 8, 9, 10], "x_dim_dtyp": 0, "x_dim_length": 0, "x_dim_nam": 0, "y": [0, 10], "y_dim_dtyp": 0, "y_dim_length": 0, "y_dim_nam": 0, "yang": 3, "you": [0, 4, 5, 9, 10], "your": 9, "yourlogin": 5, "yourself": 5, "z": 10, "zero": 0}, "titles": ["cellarr package", "cellarr.slurm package", "cellarr", "Contributors", "Changelog", "Contributing", "cellarr", "License", "Usage Notes", "Cell Arrays", "Cell Arrays"], "titleterms": {"0": 4, "1": 4, "2": 4, "3": 4, "4": 4, "5": 4, "A": [9, 10], "an": 5, "arrai": [9, 10], "autoencod": 0, "build": [9, 10], "build_cellarr_step": 1, "build_cellarrdataset": 0, "build_opt": 0, "buildutils_tiledb_arrai": 0, "buildutils_tiledb_fram": 0, "built": 9, "cell": [8, 9, 10], "cellarr": [0, 1, 2, 6], "cellarrdataset": [0, 9, 10], "cellarrdatasetslic": 0, "chang": 5, "changelog": 4, "charact": 8, "clone": 5, "code": 5, "column": [8, 9, 10], "consist": 8, "contain": 8, "content": [0, 1, 6], "contribut": 5, "contributor": 3, "creat": 5, "data": 8, "dataload": [0, 9, 10], "document": 5, "environ": [5, 9], "experiment": 8, "final_assembli": 1, "finalize_matrix": 1, "framework": 9, "handl": 8, "hpc": 9, "implement": 5, "improv": 5, "indic": 6, "inform": 8, "instal": [6, 9, 10], "issu": 5, "licens": 7, "lightn": 9, "maintain": 5, "metadata": [8, 9, 10], "modul": [0, 1], "nan": 8, "none": 8, "note": [8, 9], "option": [9, 10], "packag": [0, 1, 10], "process_cell_metadata": 1, "process_gene_annot": 1, "process_matrix": 1, "process_matrix_al": 1, "process_sample_metadata": 1, "provid": [9, 10], "pytorch": 9, "queri": [9, 10], "queryutils_tiledb_fram": 0, "releas": 5, "report": 5, "repositori": 5, "sampl": 8, "singl": 10, "slurm": [1, 9], "submit": 5, "submodul": [0, 1], "subpackag": 0, "tabl": 6, "task": 5, "todo": 5, "troubleshoot": 5, "unicod": 8, "usag": [8, 9], "utils_anndata": 0, "valu": 8, "version": 4, "your": 5}})